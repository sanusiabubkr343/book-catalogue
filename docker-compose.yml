version: '3'

services:
  admin_api:
    build:
      context: ./admin_api
      dockerfile: Dockerfile
    container_name: admin_api
    ports:
      - "8080:8080"
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      - rabbitmq
    volumes:
      - ./admin_api:/app
    command: >
      sh -c "
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8080
      "

  frontend_api:
    build:
      context: ./frontend_api
      dockerfile: Dockerfile
    container_name: frontend_api
    ports:
      - "8000:8000"
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      - rabbitmq
    volumes:
      - ./frontend_api:/app
    command: >
      sh -c "
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000
      "

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    hostname: rabbitmq
    networks:
      - default

  consumer_admin:
    build:
      context: ./admin_api
      dockerfile: Dockerfile
    container_name: consumer_admin
    working_dir: /app
    volumes:
      - ./admin_api:/app
    command: >
      sh -c "
        python manage.py makemigrations &&
        python manage.py migrate &&
        python consumers.py
      "
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - DJANGO_SETTINGS_MODULE=core.settings
    depends_on:
      - admin_api
      - rabbitmq

  consumer_frontend:
    build:
      context: ./frontend_api
      dockerfile: Dockerfile
    container_name: consumer_frontend
    working_dir: /app
    volumes:
      - ./frontend_api:/app
    command: >
      sh -c "
        python manage.py makemigrations &&
        python manage.py migrate &&
        python consumers.py
      "
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - DJANGO_SETTINGS_MODULE=core.settings
    depends_on:
      - frontend_api
      - rabbitmq

networks:
  default:
    driver: bridge
